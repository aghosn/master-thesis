define SEXP @g(SEXP %consts, SEXP %rho, i32 %useCache) #0 gc "rjit" {
start:
  %f = call SEXP @getFunction(SEXP %rho, SEXP %consts, i32 1)
  %0 = call SEXP @userLiteral(SEXP %consts, i32 2)
  %1 = icmp ne SEXP %f, inttoptr (i64 51633392 to SEXP)
  br i1 %1, label %OSR_fire, label %OSR_split

OSR_split:                                        ; preds = %start
  %2 = call SEXP @constant(SEXP %consts, i32 3) 
  %3 = call SEXP @CONS_NR(SEXP %0, SEXP inttoptr (i64 42587976 to SEXP))
  %4 = call SEXP @closureQuickArgumentAdaptor(SEXP %f, SEXP %3)
  br label %start.1

start.1:                                          ; preds = %OSR_split
  %a = call SEXP @genericGetVar(SEXP %4, SEXP %consts, i32 8)
  %5 = call SEXP @userLiteral(SEXP %consts, i32 9) 
  %6 = call SEXP @genericAdd(SEXP %a, SEXP %5, SEXP %4, SEXP %consts, i32 7)
  br label %CONTINUATION

CONTINUATION:                                     ; preds = %start.1
  %h = call SEXP @getFunction(SEXP %rho, SEXP %consts, i32 4)
  %7 = call SEXP @userLiteral(SEXP %consts, i32 5) 
  %8 = call SEXP @constant(SEXP %consts, i32 6) 
  %9 = call SEXP @icStub_1(SEXP %7, SEXP %8, SEXP %h, SEXP %rho, SEXP (SEXP, SEXP, i32)* @g, i64 0) 
  ret SEXP %9, !r_ir_type !6

OSR_fire:                                         ; preds = %start
  %OSRRet = call SEXP @OSRCont(SEXP %consts, SEXP %rho, SEXP %f, SEXP %0)
  ret SEXP %OSRRet
}
