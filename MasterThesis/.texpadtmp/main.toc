\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\select@language {english}
\contentsline {chapter}{Declaration of Authorship}{iii}{Doc-Start}
\contentsline {chapter}{Abstract}{vii}{Doc-Start}
\contentsline {chapter}{Acknowledgements}{ix}{Doc-Start}
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.6}
\contentsline {section}{\numberline {1.1}Proposed Solution}{2}{section.32}
\contentsline {section}{\numberline {1.2}Paper Overview}{3}{section.33}
\contentsline {chapter}{\numberline {2}On-Stack Replacement}{5}{chapter.34}
\contentsline {section}{\numberline {2.1}Overview}{5}{section.35}
\contentsline {subsection}{\numberline {2.1.1}Definition}{5}{subsection.36}
\contentsline {subsection}{\numberline {2.1.2}Why is OSR interesting?}{6}{subsection.37}
\contentsline {section}{\numberline {2.2}On-Stack Replacement Mechanisms}{7}{section.38}
\contentsline {subsection}{\numberline {2.2.1}The OSR Points}{7}{subsection.39}
\contentsline {subsubsection}{Guarded \& Unguarded}{7}{section*.41}
\contentsline {subsubsection}{OSR Entries \& OSR Exits}{8}{section*.44}
\contentsline {subsection}{\numberline {2.2.2}The Transition Mechanism}{8}{subsection.47}
\contentsline {subsubsection}{High-Level requirements and challenges for OSR transitions}{9}{section*.50}
\contentsline {subsubsection}{The OSR transition at a low-level}{10}{section*.60}
\contentsline {subsubsection}{The transition as a Function call}{10}{section*.66}
\contentsline {subsection}{\numberline {2.2.3}Versionning}{13}{subsection.155}
\contentsline {subsubsection}{One version}{13}{section*.156}
\contentsline {subsubsection}{Multiple Versions}{13}{section*.157}
\contentsline {subsubsection}{Caching vs. Generating on the fly}{14}{section*.158}
\contentsline {section}{\numberline {2.3}The Deoptimization case}{14}{section.159}
\contentsline {subsection}{\numberline {2.3.1}Why the Deoptimization case is more interesting?}{14}{subsection.160}
\contentsline {subsection}{\numberline {2.3.2}Where do we exit?}{15}{subsection.161}
\contentsline {subsubsection}{The Interpreter}{15}{section*.163}
\contentsline {subsubsection}{The compiled base version}{16}{section*.164}
\contentsline {subsubsection}{A less optimized version}{16}{section*.165}
\contentsline {section}{\numberline {2.4}Constraints on the OSR Mechanism}{17}{section.166}
\contentsline {subsection}{\numberline {2.4.1}The OSR trade-offs}{17}{subsection.167}
\contentsline {subsection}{\numberline {2.4.2}Limits on optimizations}{17}{subsection.168}
\contentsline {chapter}{\numberline {3}Related Work}{19}{chapter.169}
\contentsline {section}{\numberline {3.1}The origins: SELF Debugging}{19}{section.170}
\contentsline {section}{\numberline {3.2}OSR \& VMs}{22}{section.178}
\contentsline {subsection}{\numberline {3.2.1}Java HotSpot}{22}{subsection.179}
\contentsline {subsection}{\numberline {3.2.2}Jikes RVM}{23}{subsection.180}
\contentsline {subsection}{\numberline {3.2.3}WebKit VM}{24}{subsection.184}
\contentsline {section}{\numberline {3.3}OSR \& LLVM}{26}{section.186}
\contentsline {subsection}{\numberline {3.3.1}What is LLVM?}{26}{subsection.187}
\contentsline {subsection}{\numberline {3.3.2}Why do we want OSR in LLVM?}{27}{subsection.189}
\contentsline {subsection}{\numberline {3.3.3}OSR as an LLVM library: the McOSR implementation}{28}{subsection.190}
\contentsline {subsection}{\numberline {3.3.4}Another LLVM OSR library: OSR Kit}{32}{subsection.207}
\contentsline {subsubsection}{Open vs. Resolved OSR}{33}{section*.216}
\contentsline {subsubsection}{Resolved OSR points and conditions}{34}{section*.277}
\contentsline {subsubsection}{The continuation function \& StateMap}{36}{section*.309}
\contentsline {section}{\numberline {3.4}A classification summary}{37}{section.310}
\contentsline {chapter}{\numberline {4}OSR in RJIT}{39}{chapter.312}
\contentsline {section}{\numberline {4.1}Overview}{39}{section.313}
\contentsline {subsection}{\numberline {4.1.1}Justification \& Goals}{39}{subsection.314}
\contentsline {subsection}{\numberline {4.1.2}OSR Kit limitations}{40}{subsection.315}
\contentsline {subsection}{\numberline {4.1.3}The RJIT compiler}{41}{subsection.316}
\contentsline {subsubsection}{General}{41}{section*.317}
\contentsline {subsubsection}{The RJIT compilation}{42}{section*.319}
\contentsline {subsubsection}{The function's SEXP}{45}{section*.369}
\contentsline {subsubsection}{The closure's SEXP}{45}{section*.370}
\contentsline {section}{\numberline {4.2}OSR Handler}{45}{section.371}
\contentsline {subsection}{\numberline {4.2.1}Additional challenges in RJIT}{46}{subsection.372}
\contentsline {subsection}{\numberline {4.2.2}Reducing the number of compilation}{47}{subsection.373}
\contentsline {subsection}{\numberline {4.2.3}Simplifying the OSR exit insertion}{50}{subsection.425}
\contentsline {subsection}{\numberline {4.2.4}Improving the exits}{50}{subsection.450}
\contentsline {subsection}{\numberline {4.2.5}Walkthrough a simple example}{52}{subsection.451}
\contentsline {section}{\numberline {4.3}Future work}{52}{section.452}
\contentsline {subsection}{\numberline {4.3.1}Transitive StateMaps}{53}{subsection.453}
\contentsline {subsection}{\numberline {4.3.2}On-the-fly compilation}{54}{subsection.454}
\contentsline {subsection}{\numberline {4.3.3}A cleaner, more integrated way of getting a fresh IR}{54}{subsection.455}
\contentsline {chapter}{\numberline {5}Case Study: An R Inliner}{57}{chapter.456}
\contentsline {section}{\numberline {5.1}A speculative inliner for RJIT}{57}{section.457}
\contentsline {subsection}{\numberline {5.1.1}Justification}{57}{subsection.458}
\contentsline {subsection}{\numberline {5.1.2}Challenges}{58}{subsection.459}
\contentsline {subsection}{\numberline {5.1.3}Implementation}{59}{subsection.472}
\contentsline {section}{\numberline {5.2}Tests}{62}{section.488}
\contentsline {subsection}{\numberline {5.2.1}GNUR RJIT vs. Inlining on Shootout benchmarks}{62}{subsection.489}
\contentsline {subsubsection}{General execution comparison}{62}{section*.490}
\contentsline {subsubsection}{Cost of default mode vs. regular compilation}{62}{section*.491}
\contentsline {subsubsection}{Cost of all inline mode vs. regular compilation}{62}{section*.492}
\contentsline {subsection}{\numberline {5.2.2}OSR Exit vs. Replacing the closure}{62}{subsection.493}
\contentsline {subsection}{\numberline {5.2.3}OSR Handler getFreshIR vs. Always recompiling}{62}{subsection.494}
\contentsline {chapter}{\numberline {6}Conclusion}{63}{chapter.495}
\contentsline {chapter}{\numberline {A}Appendix Title Here}{65}{appendix.496}
\contentsline {chapter}{Bibliography}{67}{appendix*.497}
