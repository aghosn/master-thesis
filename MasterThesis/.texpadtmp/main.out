\BOOKMARK [0][-]{Doc-Start}{Declaration\040of\040Authorship}{}% 1
\BOOKMARK [0][-]{Doc-Start}{Abstract}{}% 2
\BOOKMARK [0][-]{Doc-Start}{Acknowledgements}{}% 3
\BOOKMARK [0][-]{chapter.6}{Introduction}{}% 4
\BOOKMARK [1][-]{section.31}{Proposed\040Solution}{chapter.6}% 5
\BOOKMARK [1][-]{section.32}{Paper\040Overview}{chapter.6}% 6
\BOOKMARK [0][-]{chapter.33}{On-Stack\040Replacement}{}% 7
\BOOKMARK [1][-]{section.34}{Overview}{chapter.33}% 8
\BOOKMARK [2][-]{subsection.35}{Definition}{section.34}% 9
\BOOKMARK [2][-]{subsection.36}{Why\040is\040OSR\040interesting?}{section.34}% 10
\BOOKMARK [1][-]{section.37}{On-Stack\040Replacement\040Mechanisms}{chapter.33}% 11
\BOOKMARK [2][-]{subsection.38}{The\040OSR\040Points}{section.37}% 12
\BOOKMARK [3][-]{section*.40}{Guarded\040&\040Unguarded}{subsection.38}% 13
\BOOKMARK [3][-]{section*.43}{OSR\040Entries\040&\040OSR\040Exits}{subsection.38}% 14
\BOOKMARK [2][-]{subsection.46}{The\040Transition\040Mechanism}{section.37}% 15
\BOOKMARK [3][-]{section*.49}{High-Level\040requirements\040and\040challenges\040for\040OSR\040transitions}{subsection.46}% 16
\BOOKMARK [3][-]{section*.59}{The\040OSR\040transition\040at\040a\040low-level}{subsection.46}% 17
\BOOKMARK [3][-]{section*.65}{The\040transition\040as\040a\040Function\040call}{subsection.46}% 18
\BOOKMARK [2][-]{subsection.154}{Versionning}{section.37}% 19
\BOOKMARK [3][-]{section*.155}{One\040version}{subsection.154}% 20
\BOOKMARK [3][-]{section*.156}{Multiple\040Versions}{subsection.154}% 21
\BOOKMARK [3][-]{section*.157}{Caching\040vs.\040Generating\040on\040the\040fly}{subsection.154}% 22
\BOOKMARK [1][-]{section.158}{The\040Deoptimization\040case}{chapter.33}% 23
\BOOKMARK [2][-]{subsection.159}{Why\040the\040Deoptimization\040case\040is\040more\040interesting?}{section.158}% 24
\BOOKMARK [2][-]{subsection.160}{Where\040do\040we\040exit?}{section.158}% 25
\BOOKMARK [3][-]{section*.162}{The\040Interpreter}{subsection.160}% 26
\BOOKMARK [3][-]{section*.163}{The\040compiled\040base\040version}{subsection.160}% 27
\BOOKMARK [3][-]{section*.164}{A\040less\040optimized\040version}{subsection.160}% 28
\BOOKMARK [1][-]{section.165}{Constraints\040on\040the\040OSR\040Mechanism}{chapter.33}% 29
\BOOKMARK [2][-]{subsection.166}{The\040OSR\040trade-offs}{section.165}% 30
\BOOKMARK [2][-]{subsection.167}{Limits\040on\040optimizations}{section.165}% 31
\BOOKMARK [0][-]{chapter.168}{Related\040Work}{}% 32
\BOOKMARK [1][-]{section.169}{The\040origins:\040SELF\040Debugging}{chapter.168}% 33
\BOOKMARK [1][-]{section.177}{OSR\040&\040VMs}{chapter.168}% 34
\BOOKMARK [2][-]{subsection.178}{Java\040HotSpot}{section.177}% 35
\BOOKMARK [2][-]{subsection.179}{Jikes\040RVM}{section.177}% 36
\BOOKMARK [2][-]{subsection.183}{WebKit\040VM}{section.177}% 37
\BOOKMARK [1][-]{section.185}{OSR\040&\040LLVM}{chapter.168}% 38
\BOOKMARK [2][-]{subsection.186}{What\040is\040LLVM?}{section.185}% 39
\BOOKMARK [2][-]{subsection.188}{Why\040do\040we\040want\040OSR\040in\040LLVM?}{section.185}% 40
\BOOKMARK [2][-]{subsection.189}{OSR\040as\040an\040LLVM\040library:\040the\040McOSR\040implementation}{section.185}% 41
\BOOKMARK [2][-]{subsection.206}{Another\040LLVM\040OSR\040library:\040OSR\040Kit}{section.185}% 42
\BOOKMARK [3][-]{section*.215}{Open\040vs.\040Resolved\040OSR}{subsection.206}% 43
\BOOKMARK [3][-]{section*.273}{Resolved\040OSR\040points\040and\040conditions}{subsection.206}% 44
\BOOKMARK [3][-]{section*.303}{The\040continuation\040function\040&\040StateMap}{subsection.206}% 45
\BOOKMARK [1][-]{section.304}{A\040classification\040summary}{chapter.168}% 46
\BOOKMARK [0][-]{chapter.306}{OSR\040in\040RJIT}{}% 47
\BOOKMARK [1][-]{section.307}{Overview}{chapter.306}% 48
\BOOKMARK [2][-]{subsection.308}{Justification\040&\040Goals}{section.307}% 49
\BOOKMARK [2][-]{subsection.309}{OSR\040Kit\040limitations}{section.307}% 50
\BOOKMARK [2][-]{subsection.310}{The\040RJIT\040compiler}{section.307}% 51
\BOOKMARK [3][-]{section*.311}{General}{subsection.310}% 52
\BOOKMARK [3][-]{section*.312}{The\040RJIT\040compilation\040flow}{subsection.310}% 53
\BOOKMARK [3][-]{section*.338}{The\040function's\040SEXP}{subsection.310}% 54
\BOOKMARK [3][-]{section*.339}{The\040closure's\040SEXP}{subsection.310}% 55
\BOOKMARK [1][-]{section.340}{OSR\040Handler}{chapter.306}% 56
\BOOKMARK [2][-]{subsection.341}{Additional\040challenges\040in\040RJIT}{section.340}% 57
\BOOKMARK [2][-]{subsection.342}{Reducing\040the\040number\040of\040compilation}{section.340}% 58
\BOOKMARK [2][-]{subsection.391}{Simplifying\040the\040OSR\040exit\040insertion}{section.340}% 59
\BOOKMARK [2][-]{subsection.414}{Improving\040the\040exits}{section.340}% 60
\BOOKMARK [2][-]{subsection.415}{Walkthrough\040a\040simple\040example}{section.340}% 61
\BOOKMARK [1][-]{section.416}{Future\040work}{chapter.306}% 62
\BOOKMARK [2][-]{subsection.417}{Transitive\040StateMaps}{section.416}% 63
\BOOKMARK [2][-]{subsection.418}{On-the-fly\040compilation}{section.416}% 64
\BOOKMARK [2][-]{subsection.419}{A\040cleaner,\040more\040integrated\040way\040of\040getting\040a\040fresh\040IR}{section.416}% 65
\BOOKMARK [0][-]{chapter.420}{Case\040Study:\040An\040R\040Inliner}{}% 66
\BOOKMARK [1][-]{section.421}{A\040speculative\040inliner\040for\040RJIT}{chapter.420}% 67
\BOOKMARK [2][-]{subsection.422}{Justification}{section.421}% 68
\BOOKMARK [2][-]{subsection.423}{Challenges}{section.421}% 69
\BOOKMARK [2][-]{subsection.424}{Implementation}{section.421}% 70
\BOOKMARK [1][-]{section.435}{Tests}{chapter.420}% 71
\BOOKMARK [2][-]{subsection.436}{GNUR\040RJIT\040vs.\040Inlining\040on\040shootout}{section.435}% 72
\BOOKMARK [2][-]{subsection.437}{OSR\040Exit\040vs.\040Replacing\040the\040closure}{section.435}% 73
\BOOKMARK [2][-]{subsection.438}{OSR\040Handler\040getFreshIR\040vs.\040Always\040recompiling}{section.435}% 74
\BOOKMARK [0][-]{chapter.439}{Conclusion}{}% 75
\BOOKMARK [0][-]{appendix.440}{Appendix\040Title\040Here}{}% 76
\BOOKMARK [0][-]{appendix*.441}{Bibliography}{}% 77
