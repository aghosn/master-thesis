\BOOKMARK [0][-]{Doc-Start}{Declaration\040of\040Authorship}{}% 1
\BOOKMARK [0][-]{Doc-Start}{Abstract}{}% 2
\BOOKMARK [0][-]{Doc-Start}{Acknowledgements}{}% 3
\BOOKMARK [0][-]{chapter.6}{Introduction}{}% 4
\BOOKMARK [1][-]{section.32}{Proposed\040Solution}{chapter.6}% 5
\BOOKMARK [1][-]{section.33}{Paper\040Overview}{chapter.6}% 6
\BOOKMARK [0][-]{chapter.34}{On-Stack\040Replacement}{}% 7
\BOOKMARK [1][-]{section.35}{Overview}{chapter.34}% 8
\BOOKMARK [2][-]{subsection.36}{Definition}{section.35}% 9
\BOOKMARK [2][-]{subsection.37}{On-Stack\040Replacement\040Benefits}{section.35}% 10
\BOOKMARK [1][-]{section.38}{Terminology\040&\040Mechanisms}{chapter.34}% 11
\BOOKMARK [2][-]{subsection.39}{Transition\040Points}{section.38}% 12
\BOOKMARK [3][-]{section*.41}{Guarded\040&\040Unguarded}{subsection.39}% 13
\BOOKMARK [3][-]{section*.44}{Entries\040&\040Exits}{subsection.39}% 14
\BOOKMARK [2][-]{subsection.47}{The\040Transition}{section.38}% 15
\BOOKMARK [3][-]{section*.51}{High-Level\040requirements\040and\040challenges\040for\040transitions}{subsection.47}% 16
\BOOKMARK [3][-]{section*.61}{The\040low-level\040transition}{subsection.47}% 17
\BOOKMARK [3][-]{section*.67}{The\040transition\040as\040a\040function\040call}{subsection.47}% 18
\BOOKMARK [2][-]{subsection.156}{Versionning}{section.38}% 19
\BOOKMARK [3][-]{section*.157}{One\040version}{subsection.156}% 20
\BOOKMARK [3][-]{section*.158}{Multiple\040Versions}{subsection.156}% 21
\BOOKMARK [3][-]{section*.159}{Caching\040vs.\040Generating\040on\040the\040fly}{subsection.156}% 22
\BOOKMARK [1][-]{section.160}{On-Stack\040Replacement\040Deoptimization}{chapter.34}% 23
\BOOKMARK [2][-]{subsection.161}{Deoptimization\040Benefits}{section.160}% 24
\BOOKMARK [2][-]{subsection.162}{The\040Exit\040Target}{section.160}% 25
\BOOKMARK [3][-]{section*.164}{The\040interpreter}{subsection.162}% 26
\BOOKMARK [3][-]{section*.165}{The\040compiled\040base\040version}{subsection.162}% 27
\BOOKMARK [3][-]{section*.166}{A\040less\040optimized\040version}{subsection.162}% 28
\BOOKMARK [1][-]{section.167}{Constraints\040on\040the\040OSR\040Mechanism}{chapter.34}% 29
\BOOKMARK [2][-]{subsection.168}{The\040OSR\040trade-offs}{section.167}% 30
\BOOKMARK [2][-]{subsection.169}{Limits\040on\040optimizations}{section.167}% 31
\BOOKMARK [0][-]{chapter.170}{Related\040Work}{}% 32
\BOOKMARK [1][-]{section.171}{The\040origins:\040SELF\040Debugging}{chapter.170}% 33
\BOOKMARK [1][-]{section.179}{OSR\040&\040VMs}{chapter.170}% 34
\BOOKMARK [2][-]{subsection.180}{Java\040HotSpot}{section.179}% 35
\BOOKMARK [2][-]{subsection.181}{Jikes\040RVM}{section.179}% 36
\BOOKMARK [2][-]{subsection.185}{WebKit\040VM}{section.179}% 37
\BOOKMARK [1][-]{section.187}{OSR\040&\040LLVM}{chapter.170}% 38
\BOOKMARK [2][-]{subsection.188}{What\040is\040LLVM?}{section.187}% 39
\BOOKMARK [2][-]{subsection.190}{Why\040do\040we\040want\040OSR\040in\040LLVM?}{section.187}% 40
\BOOKMARK [2][-]{subsection.191}{McOSR\040for\040LLVM}{section.187}% 41
\BOOKMARK [2][-]{subsection.208}{OSR\040Kit\040for\040LLVM}{section.187}% 42
\BOOKMARK [3][-]{section*.217}{Open\040vs.\040Resolved\040OSR}{subsection.208}% 43
\BOOKMARK [3][-]{section*.280}{Resolved\040OSR\040points\040and\040conditions}{subsection.208}% 44
\BOOKMARK [3][-]{section*.312}{The\040continuation\040function\040&\040StateMap}{subsection.208}% 45
\BOOKMARK [1][-]{section.332}{A\040classification\040summary}{chapter.170}% 46
\BOOKMARK [0][-]{chapter.334}{RJIT\040OSR}{}% 47
\BOOKMARK [1][-]{section.335}{Overview}{chapter.334}% 48
\BOOKMARK [2][-]{subsection.336}{Justification\040&\040Goals}{section.335}% 49
\BOOKMARK [2][-]{subsection.337}{OSR\040Kit\040limitations}{section.335}% 50
\BOOKMARK [2][-]{subsection.338}{The\040RJIT\040compiler}{section.335}% 51
\BOOKMARK [3][-]{section*.339}{General}{subsection.338}% 52
\BOOKMARK [3][-]{section*.341}{The\040RJIT\040compilation}{subsection.338}% 53
\BOOKMARK [3][-]{section*.392}{The\040function's\040SEXP}{subsection.338}% 54
\BOOKMARK [3][-]{section*.393}{The\040closure's\040SEXP}{subsection.338}% 55
\BOOKMARK [1][-]{section.394}{OSR\040Handler}{chapter.334}% 56
\BOOKMARK [2][-]{subsection.395}{Additional\040challenges\040in\040RJIT}{section.394}% 57
\BOOKMARK [2][-]{subsection.396}{Reducing\040the\040number\040of\040compilation}{section.394}% 58
\BOOKMARK [2][-]{subsection.447}{Simplifying\040the\040OSR\040exit\040insertion}{section.394}% 59
\BOOKMARK [2][-]{subsection.472}{Improving\040the\040exits}{section.394}% 60
\BOOKMARK [2][-]{subsection.473}{Walkthrough\040a\040simple\040example}{section.394}% 61
\BOOKMARK [1][-]{section.474}{Other\040prototypes\040&\040Future\040work}{chapter.334}% 62
\BOOKMARK [2][-]{subsection.475}{Transitive\040StateMaps}{section.474}% 63
\BOOKMARK [2][-]{subsection.476}{Unguarded\040OSR\040points\040&\040lazy\040deoptimization}{section.474}% 64
\BOOKMARK [2][-]{subsection.492}{On-the-fly\040compilation}{section.474}% 65
\BOOKMARK [2][-]{subsection.493}{A\040cleaner,\040more\040integrated\040way\040of\040getting\040a\040fresh\040IR}{section.474}% 66
\BOOKMARK [0][-]{chapter.494}{Case\040Study:\040An\040R\040inliner}{}% 67
\BOOKMARK [1][-]{section.495}{A\040speculative\040inliner\040for\040RJIT}{chapter.494}% 68
\BOOKMARK [2][-]{subsection.496}{Justification}{section.495}% 69
\BOOKMARK [2][-]{subsection.497}{Challenges}{section.495}% 70
\BOOKMARK [2][-]{subsection.510}{Implementation}{section.495}% 71
\BOOKMARK [1][-]{section.612}{Tests}{chapter.494}% 72
\BOOKMARK [2][-]{subsection.613}{GNUR\040RJIT\040vs.\040Inlining\040on\040Shootout\040benchmarks}{section.612}% 73
\BOOKMARK [2][-]{subsection.615}{OSR\040Exit\040vs.\040Replacing\040the\040closure}{section.612}% 74
\BOOKMARK [2][-]{subsection.636}{OSR\040Handler\040getFreshIR\040vs.\040Parsing\040the\040AST}{section.612}% 75
\BOOKMARK [0][-]{chapter.638}{Conclusion}{}% 76
\BOOKMARK [0][-]{appendix*.639}{Bibliography}{}% 77
