\BOOKMARK [0][-]{Doc-Start}{Declaration\040of\040Authorship}{}% 1
\BOOKMARK [0][-]{Doc-Start}{Abstract}{}% 2
\BOOKMARK [0][-]{Doc-Start}{Acknowledgements}{}% 3
\BOOKMARK [0][-]{chapter.6}{Introduction}{}% 4
\BOOKMARK [1][-]{section.32}{Proposed\040Solution}{chapter.6}% 5
\BOOKMARK [1][-]{section.33}{Paper\040Overview}{chapter.6}% 6
\BOOKMARK [0][-]{chapter.34}{On-Stack\040Replacement}{}% 7
\BOOKMARK [1][-]{section.35}{Overview}{chapter.34}% 8
\BOOKMARK [2][-]{subsection.36}{Definition}{section.35}% 9
\BOOKMARK [2][-]{subsection.37}{Why\040is\040OSR\040interesting?}{section.35}% 10
\BOOKMARK [1][-]{section.38}{On-Stack\040Replacement\040Mechanisms}{chapter.34}% 11
\BOOKMARK [2][-]{subsection.39}{The\040OSR\040Points}{section.38}% 12
\BOOKMARK [3][-]{section*.41}{Guarded\040&\040Unguarded}{subsection.39}% 13
\BOOKMARK [3][-]{section*.44}{OSR\040Entries\040&\040OSR\040Exits}{subsection.39}% 14
\BOOKMARK [2][-]{subsection.47}{The\040Transition\040Mechanism}{section.38}% 15
\BOOKMARK [3][-]{section*.50}{High-Level\040requirements\040and\040challenges\040for\040OSR\040transitions}{subsection.47}% 16
\BOOKMARK [3][-]{section*.60}{The\040OSR\040transition\040at\040a\040low-level}{subsection.47}% 17
\BOOKMARK [3][-]{section*.66}{The\040transition\040as\040a\040function\040call}{subsection.47}% 18
\BOOKMARK [2][-]{subsection.155}{Versionning}{section.38}% 19
\BOOKMARK [3][-]{section*.156}{One\040version}{subsection.155}% 20
\BOOKMARK [3][-]{section*.157}{Multiple\040Versions}{subsection.155}% 21
\BOOKMARK [3][-]{section*.158}{Caching\040vs.\040Generating\040on\040the\040fly}{subsection.155}% 22
\BOOKMARK [1][-]{section.159}{The\040Deoptimization\040case}{chapter.34}% 23
\BOOKMARK [2][-]{subsection.160}{Why\040is\040deoptimization\040more\040interesting?}{section.159}% 24
\BOOKMARK [2][-]{subsection.161}{Where\040do\040we\040exit?}{section.159}% 25
\BOOKMARK [3][-]{section*.163}{The\040Interpreter}{subsection.161}% 26
\BOOKMARK [3][-]{section*.164}{The\040compiled\040base\040version}{subsection.161}% 27
\BOOKMARK [3][-]{section*.165}{A\040less\040optimized\040version}{subsection.161}% 28
\BOOKMARK [1][-]{section.166}{Constraints\040on\040the\040OSR\040Mechanism}{chapter.34}% 29
\BOOKMARK [2][-]{subsection.167}{The\040OSR\040trade-offs}{section.166}% 30
\BOOKMARK [2][-]{subsection.168}{Limits\040on\040optimizations}{section.166}% 31
\BOOKMARK [0][-]{chapter.169}{Related\040Work}{}% 32
\BOOKMARK [1][-]{section.170}{The\040origins:\040SELF\040Debugging}{chapter.169}% 33
\BOOKMARK [1][-]{section.178}{OSR\040&\040VMs}{chapter.169}% 34
\BOOKMARK [2][-]{subsection.179}{Java\040HotSpot}{section.178}% 35
\BOOKMARK [2][-]{subsection.180}{Jikes\040RVM}{section.178}% 36
\BOOKMARK [2][-]{subsection.184}{WebKit\040VM}{section.178}% 37
\BOOKMARK [1][-]{section.186}{OSR\040&\040LLVM}{chapter.169}% 38
\BOOKMARK [2][-]{subsection.187}{What\040is\040LLVM?}{section.186}% 39
\BOOKMARK [2][-]{subsection.189}{Why\040do\040we\040want\040OSR\040in\040LLVM?}{section.186}% 40
\BOOKMARK [2][-]{subsection.190}{McOSR\040for\040LLVM}{section.186}% 41
\BOOKMARK [2][-]{subsection.207}{OSR\040Kit\040for\040LLVM}{section.186}% 42
\BOOKMARK [3][-]{section*.216}{Open\040vs.\040Resolved\040OSR}{subsection.207}% 43
\BOOKMARK [3][-]{section*.279}{Resolved\040OSR\040points\040and\040conditions}{subsection.207}% 44
\BOOKMARK [3][-]{section*.311}{The\040continuation\040function\040&\040StateMap}{subsection.207}% 45
\BOOKMARK [1][-]{section.331}{A\040classification\040summary}{chapter.169}% 46
\BOOKMARK [0][-]{chapter.333}{RJIT\040OSR}{}% 47
\BOOKMARK [1][-]{section.334}{Overview}{chapter.333}% 48
\BOOKMARK [2][-]{subsection.335}{Justification\040&\040Goals}{section.334}% 49
\BOOKMARK [2][-]{subsection.336}{OSR\040Kit\040limitations}{section.334}% 50
\BOOKMARK [2][-]{subsection.337}{The\040RJIT\040compiler}{section.334}% 51
\BOOKMARK [3][-]{section*.338}{General}{subsection.337}% 52
\BOOKMARK [3][-]{section*.340}{The\040RJIT\040compilation}{subsection.337}% 53
\BOOKMARK [3][-]{section*.390}{The\040function's\040SEXP}{subsection.337}% 54
\BOOKMARK [3][-]{section*.391}{The\040closure's\040SEXP}{subsection.337}% 55
\BOOKMARK [1][-]{section.392}{OSR\040Handler}{chapter.333}% 56
\BOOKMARK [2][-]{subsection.393}{Additional\040challenges\040in\040RJIT}{section.392}% 57
\BOOKMARK [2][-]{subsection.394}{Reducing\040the\040number\040of\040compilation}{section.392}% 58
\BOOKMARK [2][-]{subsection.446}{Simplifying\040the\040OSR\040exit\040insertion}{section.392}% 59
\BOOKMARK [2][-]{subsection.471}{Improving\040the\040exits}{section.392}% 60
\BOOKMARK [2][-]{subsection.472}{Walkthrough\040a\040simple\040example}{section.392}% 61
\BOOKMARK [1][-]{section.473}{Other\040prototypes\040&\040Future\040work}{chapter.333}% 62
\BOOKMARK [2][-]{subsection.474}{Transitive\040StateMaps}{section.473}% 63
\BOOKMARK [2][-]{subsection.475}{Unguarded\040OSR\040points\040&\040lazy\040deoptimization}{section.473}% 64
\BOOKMARK [2][-]{subsection.491}{On-the-fly\040compilation}{section.473}% 65
\BOOKMARK [2][-]{subsection.492}{A\040cleaner,\040more\040integrated\040way\040of\040getting\040a\040fresh\040IR}{section.473}% 66
\BOOKMARK [0][-]{chapter.493}{Case\040Study:\040An\040R\040Inliner}{}% 67
\BOOKMARK [1][-]{section.494}{A\040speculative\040inliner\040for\040RJIT}{chapter.493}% 68
\BOOKMARK [2][-]{subsection.495}{Justification}{section.494}% 69
\BOOKMARK [2][-]{subsection.496}{Challenges}{section.494}% 70
\BOOKMARK [2][-]{subsection.509}{Implementation}{section.494}% 71
\BOOKMARK [1][-]{section.525}{Tests}{chapter.493}% 72
\BOOKMARK [2][-]{subsection.526}{GNUR\040RJIT\040vs.\040Inlining\040on\040Shootout\040benchmarks}{section.525}% 73
\BOOKMARK [2][-]{subsection.528}{OSR\040Exit\040vs.\040Replacing\040the\040closure}{section.525}% 74
\BOOKMARK [2][-]{subsection.549}{OSR\040Handler\040getFreshIR\040vs.\040Parsing\040the\040AST}{section.525}% 75
\BOOKMARK [0][-]{chapter.551}{Conclusion}{}% 76
\BOOKMARK [0][-]{appendix.552}{Appendix\040Title\040Here}{}% 77
\BOOKMARK [0][-]{appendix*.553}{Bibliography}{}% 78
