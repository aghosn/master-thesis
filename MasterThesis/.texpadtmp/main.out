\BOOKMARK [0][-]{Doc-Start}{Declaration\040of\040Authorship}{}% 1
\BOOKMARK [0][-]{Doc-Start}{Abstract}{}% 2
\BOOKMARK [0][-]{Doc-Start}{Acknowledgements}{}% 3
\BOOKMARK [0][-]{chapter.6}{Introduction}{}% 4
\BOOKMARK [1][-]{section.31}{Proposed\040Solution}{chapter.6}% 5
\BOOKMARK [1][-]{section.32}{Paper\040Overview}{chapter.6}% 6
\BOOKMARK [0][-]{chapter.33}{On-Stack\040Replacement}{}% 7
\BOOKMARK [1][-]{section.34}{Overview}{chapter.33}% 8
\BOOKMARK [2][-]{subsection.35}{Definition}{section.34}% 9
\BOOKMARK [2][-]{subsection.36}{Why\040is\040OSR\040interesting?}{section.34}% 10
\BOOKMARK [1][-]{section.37}{On-Stack\040Replacement\040Mechanisms}{chapter.33}% 11
\BOOKMARK [2][-]{subsection.38}{The\040OSR\040Points}{section.37}% 12
\BOOKMARK [3][-]{section*.40}{Guarded\040&\040Unguarded}{subsection.38}% 13
\BOOKMARK [3][-]{section*.43}{OSR\040Entries\040&\040OSR\040Exits}{subsection.38}% 14
\BOOKMARK [2][-]{subsection.46}{The\040Transition\040Mechanism}{section.37}% 15
\BOOKMARK [3][-]{section*.49}{High-Level\040requirements\040and\040challenges\040for\040OSR\040transitions}{subsection.46}% 16
\BOOKMARK [3][-]{section*.56}{The\040OSR\040transition\040at\040a\040low-level}{subsection.46}% 17
\BOOKMARK [3][-]{section*.62}{Transition\040as\040a\040Function\040call}{subsection.46}% 18
\BOOKMARK [2][-]{subsection.136}{Versionning}{section.37}% 19
\BOOKMARK [3][-]{section*.137}{One\040version}{subsection.136}% 20
\BOOKMARK [3][-]{section*.138}{Multiple\040Versions}{subsection.136}% 21
\BOOKMARK [3][-]{section*.139}{Caching\040vs.\040Generating\040on\040the\040fly}{subsection.136}% 22
\BOOKMARK [1][-]{section.140}{The\040Deoptimization\040case}{chapter.33}% 23
\BOOKMARK [2][-]{subsection.141}{Why\040the\040Deoptimization\040case\040is\040more\040interesting?}{section.140}% 24
\BOOKMARK [2][-]{subsection.142}{Where\040do\040we\040exit?}{section.140}% 25
\BOOKMARK [3][-]{section*.144}{The\040Interpreter}{subsection.142}% 26
\BOOKMARK [3][-]{section*.145}{The\040compiled\040base\040version}{subsection.142}% 27
\BOOKMARK [3][-]{section*.146}{A\040less\040optimized\040version}{subsection.142}% 28
\BOOKMARK [1][-]{section.147}{Constraints\040on\040the\040OSR\040Mechanism}{chapter.33}% 29
\BOOKMARK [2][-]{subsection.148}{The\040OSR\040trade-offs}{section.147}% 30
\BOOKMARK [2][-]{subsection.149}{Limits\040on\040optimizations}{section.147}% 31
\BOOKMARK [0][-]{chapter.150}{Related\040Work}{}% 32
\BOOKMARK [1][-]{section.151}{The\040origins:\040SELF\040Debugging}{chapter.150}% 33
\BOOKMARK [1][-]{section.159}{OSR\040&\040VMs}{chapter.150}% 34
\BOOKMARK [2][-]{subsection.160}{Java\040HotSpot}{section.159}% 35
\BOOKMARK [2][-]{subsection.161}{Jikes\040RVM}{section.159}% 36
\BOOKMARK [2][-]{subsection.165}{WebKit\040VM}{section.159}% 37
\BOOKMARK [1][-]{section.167}{OSR\040&\040LLVM}{chapter.150}% 38
\BOOKMARK [2][-]{subsection.168}{What\040is\040LLVM?}{section.167}% 39
\BOOKMARK [2][-]{subsection.170}{Why\040do\040we\040want\040OSR\040in\040LLVM?}{section.167}% 40
\BOOKMARK [2][-]{subsection.171}{OSR\040as\040an\040LLVM\040library:\040the\040McOSR\040implementation}{section.167}% 41
\BOOKMARK [2][-]{subsection.188}{Another\040LLVM\040OSR\040library:\040OSR\040Kit}{section.167}% 42
\BOOKMARK [3][-]{section*.197}{Open\040vs.\040Resolved\040OSR}{subsection.188}% 43
\BOOKMARK [3][-]{section*.255}{Resolved\040OSR\040points\040and\040conditions}{subsection.188}% 44
\BOOKMARK [3][-]{section*.285}{The\040continuation\040function\040&\040StateMap}{subsection.188}% 45
\BOOKMARK [1][-]{section.286}{A\040classification\040summary}{chapter.150}% 46
\BOOKMARK [0][-]{chapter.288}{OSR\040in\040RJIT}{}% 47
\BOOKMARK [1][-]{section.289}{Overview}{chapter.288}% 48
\BOOKMARK [2][-]{subsection.290}{Justification\040&\040Goals}{section.289}% 49
\BOOKMARK [2][-]{subsection.291}{OSR\040Kit\040limitations}{section.289}% 50
\BOOKMARK [2][-]{subsection.292}{The\040RJIT\040compiler}{section.289}% 51
\BOOKMARK [3][-]{section*.293}{General}{subsection.292}% 52
\BOOKMARK [3][-]{section*.294}{The\040RJIT\040compilation\040flow}{subsection.292}% 53
\BOOKMARK [3][-]{section*.320}{The\040function's\040SEXP}{subsection.292}% 54
\BOOKMARK [3][-]{section*.321}{The\040closure's\040SEXP}{subsection.292}% 55
\BOOKMARK [1][-]{section.322}{OSR\040Handler}{chapter.288}% 56
\BOOKMARK [2][-]{subsection.323}{Additional\040challenges\040in\040RJIT}{section.322}% 57
\BOOKMARK [2][-]{subsection.324}{Reducing\040the\040number\040of\040compilation}{section.322}% 58
\BOOKMARK [2][-]{subsection.373}{Simplifying\040the\040OSR\040exit\040insertion}{section.322}% 59
\BOOKMARK [2][-]{subsection.396}{Improving\040the\040exits}{section.322}% 60
\BOOKMARK [2][-]{subsection.397}{Walkthrough\040a\040simple\040example}{section.322}% 61
\BOOKMARK [1][-]{section.398}{Future\040work}{chapter.288}% 62
\BOOKMARK [2][-]{subsection.399}{Transitive\040StateMaps}{section.398}% 63
\BOOKMARK [2][-]{subsection.400}{On-the-fly\040compilation}{section.398}% 64
\BOOKMARK [2][-]{subsection.401}{A\040cleaner,\040more\040integrated\040way\040of\040getting\040a\040fresh\040IR}{section.398}% 65
\BOOKMARK [0][-]{chapter.402}{Case\040Study:\040An\040R\040Inliner}{}% 66
\BOOKMARK [1][-]{section.403}{A\040speculative\040inliner\040for\040RJIT}{chapter.402}% 67
\BOOKMARK [2][-]{subsection.404}{Justification}{section.403}% 68
\BOOKMARK [2][-]{subsection.405}{Challenges}{section.403}% 69
\BOOKMARK [2][-]{subsection.406}{Implementation}{section.403}% 70
\BOOKMARK [1][-]{section.417}{Tests}{chapter.402}% 71
\BOOKMARK [2][-]{subsection.418}{GNUR\040RJIT\040vs.\040Inlining\040on\040shootout}{section.417}% 72
\BOOKMARK [2][-]{subsection.419}{OSR\040Exit\040vs.\040Replacing\040the\040closure}{section.417}% 73
\BOOKMARK [2][-]{subsection.420}{OSR\040Handler\040getFreshIR\040vs.\040Always\040recompiling}{section.417}% 74
\BOOKMARK [0][-]{chapter.421}{Conclusion}{}% 75
\BOOKMARK [0][-]{appendix.422}{Appendix\040Title\040Here}{}% 76
\BOOKMARK [0][-]{appendix*.423}{Bibliography}{}% 77
